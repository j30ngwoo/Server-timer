name: Release (Windows + macOS)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies (optional)
        shell: pwsh
        run: |
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build (PyInstaller)
        shell: pwsh
        run: >
          pyinstaller src/main.py --onefile --noconsole
          --paths src \
          --name "${{ github.event.repository.name }}"
          --distpath out --workpath build --specpath build

      - name: Rename artifact
        shell: pwsh
        run: >
          ren out\${{ github.event.repository.name }}.exe
          ${{ github.event.repository.name }}-${{ github.ref_name }}-windows.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: out\*.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies (optional)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build (PyInstaller)
        run: >
          pyinstaller src/main.py --onefile --noconsole
          --name "${{ github.event.repository.name }}"
          --distpath out --workpath build --specpath build

      # 초보 사용자 배려: 실행파일을 zip으로 감싸서 배포
      - name: Zip & rename artifact
        run: |
          NAME="${{ github.event.repository.name }}"
          TAG="${{ github.ref_name }}"
          mv "out/${NAME}" "out/${NAME}-${TAG}-macos"
          (cd out && zip -r "${NAME}-${TAG}-macos.zip" "${NAME}-${TAG}-macos")
          rm -rf "out/${NAME}-${TAG}-macos"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifact
          path: out/*.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
          pattern: "*-artifact"

      - name: Generate release notes
        run: |
          {
            echo "Auto release for $GITHUB_REF_NAME"
            echo
            echo "Assets:"
            ls -al dist || true
            echo
            echo "- Windows: *-windows.exe"
            echo "- macOS:   *-macos.zip"
          } > NOTES.md

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: NOTES.md
          files: |
            dist/*.exe
            dist/*.zip
